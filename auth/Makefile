# VARIABLES
DOCKER_COMPOSE = docker-compose
CONTAINER      = micro-auth
EXEC           = docker exec -ti --user=root $(CONTAINER)
EXEC_PHP       = $(EXEC) php
SYMFONY        = $(EXEC_PHP) bin/console
COMPOSER       = $(EXEC) composer
CURRENT-DIR  := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
CURRENT_UID  := $(shell id -u)

.DEFAULT_GOAL := deploy

deploy: build
	@echo "üì¶ Build done"

build: create_env_file rebuild

deps: composer-install

update-deps: composer-update

create_env_file:
	@if [ ! -f .env.local ]; then cp .env .env.local; fi

# üêò Composer
composer-install ci: ACTION=install

composer-update: ACTION=update $(module)

composer-require cr: ACTION=require $(module)

composer composer-install ci composer-update composer-require cr: create_env_file
	$(COMPOSER) $(ACTION) \
			--ignore-platform-reqs \
			--no-ansi
# üê≥ Docker Compose
start:
	@echo "üöÄ Deploy!!!"
	@$(DOCKER_COMPOSE) up -d
	make deps
stop:
	$(DOCKER_COMPOSE) stop
down:
	$(DOCKER_COMPOSE) down
recreate:
	@echo "üî• Recreate container!!!"
	$(DOCKER_COMPOSE) up -d --build --remove-orphans --force-recreate
	make deps
rebuild:
	@echo "üî• Rebuild container!!!"
	$(DOCKER_COMPOSE) build --pull --force-rm --no-cache
	make start

# ü¶ù Apache
reload:
	$(EXEC) /bin/bash service apache2 restart || true

#clear cache
clear:
	$(SYMFONY) cache:clear

bash:
	$(DOCKER_COMPOSE) exec --user=$(CURRENT_UID) -it $(CONTAINER) /bin/bash
